name: Run Unit tests

on:
  push:
    branches: [ cvsimport ]


jobs:
  build_Windows:
    name: "Build for Windows"
    runs-on: windows-latest
    
    steps:
      - uses: actions/checkout@v2
        with:
          ref: master
          fetch-depth: '0'

      - name: override CMakeLists.txt and update version
        run: |
          git fetch
          git checkout cvsimport
          cp CMakeLists.txt ../CMakeLists.txt
          cp checkVersion.py ../checkVersion.py
          git checkout master
          cp ../CMakeLists.txt CMakeLists.txt
          cp ../checkVersion.py checkVersion.py
          python checkVersion.py
        shell: bash

      - name: Install Qt
        uses: jurplel/install-qt-action@v2
        with:
          arch: 'win64_msvc2017_64'

      - name: Install CMake 
        uses: ilammy/msvc-dev-cmd@v1
      
      - name: Compile
        uses: lukka/run-cmake@v2
        with:
          cmakeGenerator: VS16Win64
          cmakeListsOrSettingsJson: CMakeListsTxtBasic
          cmakeListsTxtPath: ${{ github.workspace }}/CMakeLists.txt
          cmakeBuildType: Release
          buildWithCMakeArgs: "--config Release --target ALL_BUILD"
          buildDirectory: ${{ github.workspace }}/build
          buildWithCMake: true

      - name: set up QT path
        run: |
          setx path "%path%;D:\a\Radiance\Qt\5.12.8\msvc2017_64\bin"
          setx path “%path%;D:\a\Radiance\Qt\5.12.8\msvc2017_64\lib”
      - name: Build installer
        uses: lukka/run-cmake@v2
        with:
          cmakeGenerator: VS16Win64
          cmakeListsOrSettingsJson: CMakeListsTxtBasic
          cmakeListsTxtPath: ${{ github.workspace }}/CMakeLists.txt
          cmakeBuildType: Release
          buildWithCMakeArgs: "--config Release --target PACKAGE"
          buildDirectory: ${{ github.workspace }}/build
          buildWithCMake: true
      
      - name: Zip Compiled Artifact
        run: |
          mv build\_CPack_Packages\win64\NSIS\radiance-*-Windows\ radiance
          Compress-Archive -U -Path radiance\* -DestinationPath Radiance_Windows

      - name: list files
        run: |
          mkdir WindowsBuild
          cp ./build/radiance-*.exe ./WindowsBuild/Radiance_Windows.exe
          cp ./Radiance_Windows.zip ./WindowsBuild/Radiance_Windows.zip
          ls -R
        shell: bash

      - name: Zip Build Artifact
        run: |
          Compress-Archive -U -Path WindowsBuild -DestinationPath Radiance_Windows_both

      - name: Upload artifact
        uses: actions/upload-artifact@v1
        with:
          name: Radiance_Windows_both
          path: Radiance_Windows_both.zip

  Test_Windows:
    needs: [build_Windows]
    name: Test Windows build
    runs-on: windows-latest
    steps:
      - name: Download Windows installers
        uses: actions/download-artifact@v2
        with:
          name: Radiance_Windows_both
      
      - name: unzip artifacts
        run: |
          unzip Radiance_Windows_both.zip
          unzip WindowsBuild/Radiance_Windows.zip 
      
      - name: Display structure of downloaded files
        run: ls -R

  Test_Linux:
    name: "Test for Linux"
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        with:
          ref: master

      - name: Install Qt
        uses: jurplel/install-qt-action@v2
        with:
          version: '5.12.8'

      - name: Install CMake 
        uses: ilammy/msvc-dev-cmd@v1
      

      - name: set dev packages
        run: |
          sudo apt install libglu1-mesa-dev freeglut3-dev

      - name: override CMakeLists.txt and update version
        run: |
          git fetch
          git checkout cvsimport
          cp CMakeLists.txt ../CMakeLists.txt
          cp checkVersion.py ../checkVersion.py
          git checkout master
          cp ../CMakeLists.txt CMakeLists.txt
          cp ../checkVersion.py checkVersion.py
          python checkVersion.py
        shell: bash

      - name: Install Qt
        uses: jurplel/install-qt-action@v2
        with:
          version: '5.12.8'

      - name: Install CMake 
        uses: ilammy/msvc-dev-cmd@v1
        
      - uses: shogo82148/actions-setup-perl@v1
        with:
          perl-version: '5.32'

      - name: set dev packages
        run: |
          sudo apt install libglu1-mesa-dev freeglut3-dev

      - name: Compile
        run: |
          export PATH=$PATH:$Qt5_DIR/bin
          mkdir build
          cd build
          cmake -DCMAKE_BUILD_TYPE=Release ..
          make -j8
      
      - name: Build installer
        run: |
          export PATH=$PATH:$Qt5_DIR/bin
          export PATH=$PATH:$Qt5_DIR/lib
          cd build
          make package -j8

      - name: list items in bin
        run: |
          ls ./build -R

      - name: copy compiled folder
        run: |
          mkdir buildRad
          sudo cp -avr ./build/_CPack_Packages/Linux/TGZ/radiance-*-Linux/usr/local/radiance ./buildRad
          ls ./buildRad -R


      - name: run tests -util
        run: |
          export RAYPATH=.:/home/runner/work/Radiance/Radiance/buildRad/radiance/lib
          export PATH=$PATH:/home/runner/work/Radiance/Radiance/buildRad/radiance/bin
          rtrace -version
          cd ./test/util/
          make -j8
          make all clean
      
      - name: run tests -gen
        run: |
          export RAYPATH=.:/home/runner/work/Radiance/Radiance/buildRad/radiance/lib
          export PATH=$PATH:/home/runner/work/Radiance/Radiance/buildRad/radiance/bin
          rtrace -version
          cd ./test/gen/
          make -j8
          make all clean

      - name: run tests -cal
        run: |
          export RAYPATH=.:/home/runner/work/Radiance/Radiance/buildRad/radiance/lib
          export PATH=$PATH:/home/runner/work/Radiance/Radiance/buildRad/radiance/bin
          rtrace -version
          cd ./test/cal/
          make -j8
          make all clean

      - name: run tests -px
        run: |
          export RAYPATH=.:/home/runner/work/Radiance/Radiance/buildRad/radiance/lib
          export PATH=$PATH:/home/runner/work/Radiance/Radiance/buildRad/radiance/bin
          rtrace -version
          cd ./test/px/
          make -j8
          make all clean

      - name: run tests -renders
        run: |
          export RAYPATH=.:/home/runner/work/Radiance/Radiance/buildRad/radiance/lib
          export PATH=$PATH:/home/runner/work/Radiance/Radiance/buildRad/radiance/bin
          rtrace -version
          cd ./test/renders/
          make -j8
          make all clean

      
